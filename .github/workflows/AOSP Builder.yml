name: build AOSP
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: üîÑ Checkout Code
      uses: actions/checkout@v4
      
    - name: ‚è∞ Prepare timezone
      run: |
        sudo rm /etc/localtime
        sudo ln -s /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
        
    - name: üì¶ Install Dependencies
      run: |
        sudo apt update -y
        sudo apt install bc cpio flex bison aptitude git python-is-python3 tar aria2 perl wget curl lz4 libssl-dev -y
        
    - name: üîß Clone Toolchains
      run: |
        mkdir clang && cd clang && curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman" && chmod a+x antman && ./antman -S && ./antman --patch=glibc && cd ..
        git clone https://github.com/greenforce-project/gcc-arm64 -b main --depth=1 gcc64
        git clone https://github.com/greenforce-project/gcc-arm -b main --depth=1 gcc32
    - name: ‚öôÔ∏è Setup Environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Jakarta date '+%d%m%Y-%H%M')" >> $GITHUB_ENV
        echo "CLANG_PATH=$GITHUB_WORKSPACE/clang" >> $GITHUB_ENV
        echo "GCC64_PATH=$GITHUB_WORKSPACE/gcc64" >> $GITHUB_ENV
        echo "GCC32_PATH=$GITHUB_WORKSPACE/gcc32" >> $GITHUB_ENV
        
    - name: üì• Clone kernelSU-Next
      run: curl -LSs "https://raw.githubusercontent.com/Mr-Morat/KernelSU-Next/susfs/kernel/setup.sh" | bash -s susfs
      
    - name: üõ†Ô∏è Build Kernel
      run: |
        export ARCH=arm64
        export PATH="$CLANG_PATH/bin:$GCC64_PATH/bin:$GCC32_PATH/bin:$PATH"
        export KBUILD_BUILD_USER=Brutalist
        export KBUILD_BUILD_HOST=MoratRealm
        export KBUILD_COMPILER_STRING="$$CLANG_PATH/clang"
        make O=out ARCH=arm64 sweet_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 LLVM=1 LLVM_IAS=1 CC=clang \
          CLANG_TRIPLE=$CLANG_PATH/aarch64-linux-gnu- \
          CROSS_COMPILE=$GCC64_PATH/bin/aarch64-elf- \
          CROSS_COMPILE_ARM32=$GCC32_PATH/bin/arm-eabi-
        mv out/.config out/sweet_defconfig.txt
        
    - name: üíæ Upload configs
      uses: actions/upload-artifact@v4
      with:
        name: configs-${{ env.BUILD_TIME }}
        path: out/sweet_defconfig.txt
        
    - name: üìÇ Clone Anykernel3 & Zip
      run: |
        git clone --depth=1 https://github.com/Mr-Morat/anykernel3 -b main AnyKernel3
        cp out/arch/arm64/boot/Image.gz AnyKernel3/Image.gz
        cp out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
        cp out/arch/arm64/boot/dtb.img AnyKernel3/dtb.img
        cd AnyKernel3
        zip -r "../TobrutExotic-AOSP-${{ env.BUILD_TIME }}.zip" *
        
    - name: üì§ Upload Flashable zip
      uses: actions/upload-artifact@v4
      with:
        name: TobrutExotic-AOSP-${{ env.BUILD_TIME }}
        path: AnyKernel3/*